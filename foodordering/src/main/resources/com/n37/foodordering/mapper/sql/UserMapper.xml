<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.n37.foodordering.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.n37.foodordering.model.User">
   
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="full_name" jdbcType="VARCHAR" property="fullName" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="user_role" jdbcType="VARCHAR" property="userRole" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="is_active" jdbcType="BIT" property="isActive" />
    <result column="andress" jdbcType="VARCHAR" property="andress" />
  </resultMap>
  <sql id="Example_Where_Clause">
  
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
   
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    
    id, full_name, user_name, user_password, email, phone, user_role, avatar, is_active, 
    andress
  </sql>
  <select id="selectByExample" parameterType="com.n37.foodordering.model.UserExample" resultMap="BaseResultMap">
  
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.n37.foodordering.model.UserExample">
    
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.n37.foodordering.model.User">
  
    insert into user (id, full_name, user_name, 
      user_password, email, phone, 
      user_role, avatar, is_active, 
      andress)
    values (#{id,jdbcType=INTEGER}, #{fullName,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{userPassword,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{userRole,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{isActive,jdbcType=BIT}, 
      #{andress,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.n37.foodordering.model.User">
   
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fullName != null">
        full_name,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="userRole != null">
        user_role,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="isActive != null">
        is_active,
      </if>
      <if test="andress != null">
        andress,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fullName != null">
        #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null">
        #{userRole,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="isActive != null">
        #{isActive,jdbcType=BIT},
      </if>
      <if test="andress != null">
        #{andress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.n37.foodordering.model.UserExample" resultType="java.lang.Long">
   
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
   
    update user
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.fullName != null">
        full_name = #{row.fullName,jdbcType=VARCHAR},
      </if>
      <if test="row.userName != null">
        user_name = #{row.userName,jdbcType=VARCHAR},
      </if>
      <if test="row.userPassword != null">
        user_password = #{row.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="row.email != null">
        email = #{row.email,jdbcType=VARCHAR},
      </if>
      <if test="row.phone != null">
        phone = #{row.phone,jdbcType=VARCHAR},
      </if>
      <if test="row.userRole != null">
        user_role = #{row.userRole,jdbcType=VARCHAR},
      </if>
      <if test="row.avatar != null">
        avatar = #{row.avatar,jdbcType=VARCHAR},
      </if>
      <if test="row.isActive != null">
        is_active = #{row.isActive,jdbcType=BIT},
      </if>
      <if test="row.andress != null">
        andress = #{row.andress,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
   
    update user
    set id = #{row.id,jdbcType=INTEGER},
      full_name = #{row.fullName,jdbcType=VARCHAR},
      user_name = #{row.userName,jdbcType=VARCHAR},
      user_password = #{row.userPassword,jdbcType=VARCHAR},
      email = #{row.email,jdbcType=VARCHAR},
      phone = #{row.phone,jdbcType=VARCHAR},
      user_role = #{row.userRole,jdbcType=VARCHAR},
      avatar = #{row.avatar,jdbcType=VARCHAR},
      is_active = #{row.isActive,jdbcType=BIT},
      andress = #{row.andress,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>